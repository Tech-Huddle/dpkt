name: DPKT Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

env:
  NODE_VERSION: '18.x'

jobs:
  env-check:
    name: Check Environment
    runs-on: ubuntu-latest
    outputs:
      ENV: ${{ steps.set-env.outputs.env }}
    steps:
    - id: set-env
      name: Set ENV
      if: ${{ (startsWith(github.ref_name, 'feature/')) ||  (startsWith(github.ref_name, 'main')) }}
      run: |
        echo "************* Set ENV **************"
        echo "Branch=$GITHUB_REF_NAME"
        echo "Setting up ENV=dev"
        echo "env=dev" >> "$GITHUB_OUTPUT"
        echo "************************************"

  build:
    name: Build
    needs: env-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Npm Package Build
      run: |
        npm ci
        npm run build --if-present
        ls -l

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: build-package
        # A file, directory or wildcard pattern that describes what to upload
        path: build
        # The desired behavior if no files are found using the provided path.

  deploy:
    name: Deploy
    runs-on:  amazon/aws-cli
    needs: 
    - build
    - env-check
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        # Artifact name
        name: build-package
        # Destination path
        path: build-package
    - name: Test AWS CLI
      id: install-aws-cli
      uses: unfor19/install-aws-cli-action@master
      with:
        version: 2
    - name: Deployment
      env:
        ENV: ${{needs.env-check.outputs.ENV}}
      # uses: keithweaver/aws-s3-github-action@v1.0.0
      # with:
      #   command: cp
      #   source: ./build-package
      #   destination: s3://dpkt-dev/
      #   aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #   aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   aws_region: ap-south-1
      run: |
        cd build-package
        ls -l
        BUCKET=dpkt-$ENV
        echo "========= Bucket Name ==========="
        echo $BUCKET
        echo "================================="
        echo $GITHUB_REF_NAME
        echo "======= Checking AWS Version ======="
        echo ${{ secrets.AWS_ACCESS_KEY_ID }}
        echo ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws --version
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws s3api list-objects --bucket $BUCKET
        # aws s3 cp build-package s3://$BUCKET/
